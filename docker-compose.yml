version: "3.1"

services:
  pgAdmin:
    restart: always
    build:
      context: ./pgadmin
      dockerfile: ./Dockerfile
    image: demo/pgadmin4
    container_name: "demo-pgadmin"
    ports:
      - "8000:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: 1234@admin.com
      PGADMIN_DEFAULT_PASSWORD: 1234
    volumes:
      - ./volumes/pgadmin:/var/lib/pgadmin
    networks:
      - localnet

  postgres:
      restart: always
      build:
        context: ./postgres
        dockerfile: ./Dockerfile
      image: demo/postgres
      container_name: "demo-postgres"
      ports:
        - "5432:5432"
      environment:
        POSTGRES_USER: pg
        POSTGRES_PASSWORD: pg
        POSTGRES_DB: demoDB
      volumes:
        - ./volumes/pgvol:/var/lib/postgresql/data
      networks:
        - localnet
  mongo:
    build:
      context: ./mongo
      dockerfile: ./Dockerfile
    image: demo/mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - ./volumes/mongo_db:/data/db
    container_name: mongo-db
    networks:
      - localnet

  mongo-express:
      build:
        context: ./mongo-express
        dockerfile: ./Dockerfile
      image: demo/mongo-express
      restart: always
      ports:
        - 8081:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: root
        ME_CONFIG_MONGODB_ADMINPASSWORD: root
      container_name: mongo-express
      networks:
        - localnet

  nifi:
    build:
      context: ./nifi
      dockerfile: ./Dockerfile
    image: demo/nifi
    container_name: demo_nifi
    ports:
      - "8080:8080"
    volumes:
      - ./volumes/import:/opt/nifi/uploads
      - ./volumes/json:/opt/nifi/result
    networks:
      - localnet

  jupyter:
    build:
      context: ./jupyter
      dockerfile: ./Dockerfile
    image: demo/jupyter
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./volumes/import:/home/jovyan/work/result
      - ./volumes/json:/home/jovyan/work/json
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_TOKEN: "demo123"
    ports:
      - "8888:8888"
    container_name: demo_jupyter
    networks:
      - localnet

networks:
  localnet:
    attachable: true

